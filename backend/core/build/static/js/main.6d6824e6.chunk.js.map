{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","ssn","dob","credentials","setCredentials","message","setMessage","onChange","e","target","value","onSubmit","preventDefault","voter_hash","sha256","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","type","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA+CeA,EA5CH,WAEV,MAAsCC,mBAAS,CAC7CC,KAAM,GACNC,IAAK,GACLC,IAAK,KAHP,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,EAA8BL,mBAAS,CACrCM,QAAS,KADX,mBAAgBC,GAAhB,WAIQN,EAAmBG,EAAnBH,KAAMC,EAAaE,EAAbF,IAAKC,EAAQC,EAARD,IAEbK,EAAW,SAAAC,GAAC,OAAIJ,EAAe,2BAAKD,GAAN,kBAAoBK,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,UAkBjF,OACE,8BACE,uBAAMC,SAAU,SAAAH,GAAC,OAlBJ,SAAAA,GACfA,EAAEI,iBACF,IAAMC,EAAaC,iBAAOd,EAAOC,EAAMC,GACvCa,QAAQC,IAAIF,iBAAOd,EAAOC,EAAMC,IAChCe,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE,KAAQ,QAAS,WAAcT,MACrDU,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAK,SAAAE,GACNnB,EAAWmB,EAAKpB,YAKKM,CAASH,IAA9B,UACE,uBAAOkB,KAAO,OAAOC,YAAc,OAAO3B,KAAO,OAAOO,SAAU,SAAAC,GAAC,OAAID,EAASC,MAChF,uBAAOkB,KAAO,OAAOC,YAAc,MAAM3B,KAAO,MAAMO,SAAU,SAAAC,GAAC,OAAID,EAASC,MAC9E,uBAAOkB,KAAO,OAAOC,YAAc,MAAM3B,KAAO,MAAMO,SAAU,SAAAC,GAAC,OAAID,EAASC,MAC9E,uBAAOkB,KAAO,iBC7BPE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d6824e6.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { sha256 } from 'js-sha256'\n\nconst App = () => {\n\n  const [credentials, setCredentials] = useState({\n    name: '',\n    ssn: '',\n    dob: ''\n  })\n\n  const [message, setMessage] = useState({\n    message: ''\n  })\n\n  const { name, ssn, dob } = credentials;\n  \n  const onChange = e => setCredentials({ ...credentials, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault()\n    const voter_hash = sha256(name + ssn + dob)\n    console.log(sha256(name + ssn + dob))\n    fetch(`http://localhost:8000/api/add/`, {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ 'vote': 'biden', 'voter_hash': voter_hash })\n    }).then(response => {\n      return response.json()\n    }).then(json => {\n      setMessage(json.message)\n    })\n  }\n  return (\n    <div>\n      <form onSubmit={e => onSubmit(e)}>\n        <input type = \"text\" placeholder = \"Name\" name = \"name\" onChange={e => onChange(e)}></input>\n        <input type = \"text\" placeholder = \"SSN\" name = \"ssn\" onChange={e => onChange(e)}></input>\n        <input type = \"text\" placeholder = \"DOB\" name = \"dob\" onChange={e => onChange(e)}></input>\n        <input type = \"submit\"></input>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}