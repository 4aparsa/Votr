{"version":3,"sources":["Home.js","Vote.js","Verify.js","Blockchain.js","App.js","reportWebVitals.js","index.js"],"names":["features","name","description","icon","GlobeAltIcon","ScaleIcon","LightningBoltIcon","AnnotationIcon","Home","useState","votes","setVotes","useEffect","fetch","method","then","response","json","votes_arr","Object","entries","key","value","push","className","fill","viewBox","preserveAspectRatio","points","href","style","marginLeft","to","src","alt","map","feature","scope","person","Vote","ssn","dob","vote","credentials","setCredentials","message","setMessage","onChange","e","target","onSubmit","preventDefault","voter_hash","sha256","headers","body","JSON","stringify","type","defaultValue","htmlFor","id","placeholder","Verify","blockNumber","setBlockNumber","console","log","Blockchain","blockchain","setBlockchain","length","setLength","status","setStatus","blocks","replace","parse","is_valid","toString","block","number","hash_code","previous_hash","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAeMA,EAAW,CACb,CACEC,KAAM,gCACNC,YACE,+GACFC,KAAMC,KAER,CACEH,KAAM,eACNC,YACE,0FACFC,KAAME,KAER,CACEJ,KAAM,mBACNC,YACE,sLACFC,KAAMG,KAER,CACEL,KAAM,kCACNC,YACE,sJACFC,KAAMI,MAmLGC,EA/KF,WACT,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACNC,MAAM,wCAAyC,CAC3CC,OAAQ,QACTC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GAEJ,IADA,IAAIC,EAAY,GAChB,MAA2BC,OAAOC,QAAQH,GAA1C,eAAiD,CAA5C,0BAAOI,EAAP,KAAYC,EAAZ,KACDJ,EAAUK,KAAK,CAAC,KAAQF,EAAK,MAASC,IAE1CX,EAASO,QAEd,IAEC,gCACI,sBAAKM,UAAU,oCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,yFAAf,UACA,qBACIA,UAAU,8FACVC,KAAK,eACLC,QAAQ,cACRC,oBAAoB,OACpB,cAAY,OALhB,SAOI,yBAASC,OAAO,8BAGpB,cAAC,IAAD,UACI,qBAAKJ,UAAU,qCAAf,SACA,sBAAKA,UAAU,sEAAsE,aAAW,SAAhG,UACI,qBAAKA,UAAU,2DAAf,SACI,qBAAKA,UAAU,qDAAf,SACI,oBAAGA,UAAY,2BAA2BK,KAAK,IAA/C,UACA,sBAAML,UAAU,UAAhB,sBADA,cAMR,qBAAKM,MAAS,CAACC,WAAY,SAAUP,UAAU,gDAA/C,SACI,cAAC,IAAD,CAAMQ,GAAG,cAAcR,UAAU,oCAAjC,sCAQZ,sBAAMA,UAAU,mFAAhB,SACI,sBAAKA,UAAU,8BAAf,UACA,qBAAIA,UAAU,+EAAd,UACI,sBAAMA,UAAU,kBAAhB,wCAAoE,IACpE,sBAAMA,UAAU,kCAAhB,uBAEJ,mBAAGA,UAAU,oGAAb,2QAGA,sBAAKA,UAAU,0DAAf,UACI,qBAAKA,UAAU,oBAAf,SACA,cAAC,IAAD,CACIQ,GAAG,QACHR,UAAU,wLAFd,wBAOA,qBAAKA,UAAU,uBAAf,SACA,cAAC,IAAD,CACIQ,GAAG,UACHR,UAAU,6LAFd,2CAYZ,qBAAKA,UAAU,+CAAf,SACI,qBACAA,UAAU,+DACVS,IAAI,iKACJC,IAAI,UAIZ,qBAAKV,UAAU,iBAAf,SACI,sBAAKA,UAAU,yCAAf,UACI,sBAAKA,UAAU,iBAAf,UACA,oBAAIA,UAAU,kEAAd,sBACA,mBAAGA,UAAU,kFAAb,kCAGA,mBAAGA,UAAU,kDAAb,qGAKA,qBAAKA,UAAU,QAAf,SACA,oBAAIA,UAAU,wEAAd,SACKxB,EAASmC,KAAI,SAACC,GAAD,OACd,sBAAwBZ,UAAU,WAAlC,UACI,+BACA,qBAAKA,UAAU,0FAAf,SACI,cAACY,EAAQjC,KAAT,CAAcqB,UAAU,UAAU,cAAY,WAElD,mBAAGA,UAAU,oDAAb,SAAkEY,EAAQnC,UAE1E,oBAAIuB,UAAU,qCAAd,SAAoDY,EAAQlC,gBAPtDkC,EAAQnC,kBAc9B,8BACA,gCACA,wBAAQuB,UAAU,kBAAlB,SACA,qBAAKA,UAAU,8CAAf,SACI,oBAAIA,UAAU,qCAAd,kCAGH,qBAAKA,UAAU,gBAAf,SACG,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,4DAAf,SACA,qBAAKA,UAAU,gEAAf,SACI,wBAAOA,UAAU,sCAAjB,UACA,uBAAOA,UAAU,aAAjB,SACI,+BACA,oBACIa,MAAM,MACNb,UAAU,iFAFd,kBAMA,oBACIa,MAAM,MACNb,UAAU,iFAFd,kCAQJ,uBAAOA,UAAU,oCAAjB,SACKd,EAAMyB,KAAI,SAACG,GAAD,OACX,+BACI,oBAAId,UAAU,8BAAd,SACA,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,OAAf,SACA,qBAAKA,UAAU,oCAAf,SAAoDc,EAAOrC,aAI/D,oBAAIuB,UAAU,8BAAd,SACI,qBAAKA,UAAU,wBAAf,SAAwCc,EAAO5B,YAT9C4B,EAAOrC,+B,wBClD7BsC,EAvIF,WACT,MAAsC9B,mBAAS,CAC3CR,KAAM,GACNuC,IAAK,GACLC,IAAK,GACLC,KAAM,KAJV,mBAAOC,EAAP,KAAoBC,EAApB,KAOE,EAA8BnC,mBAAS,IAAvC,mBAAOoC,EAAP,KAAgBC,EAAhB,KAEQ7C,EAAyB0C,EAAzB1C,KAAMuC,EAAmBG,EAAnBH,IAAKC,EAAcE,EAAdF,IAAKC,EAASC,EAATD,KAElBK,EAAW,SAAAC,GAAC,OAAIJ,EAAe,2BAAKD,GAAN,kBAAoBK,EAAEC,OAAOhD,KAAO+C,EAAEC,OAAO3B,UAiBjF,OACE,gCACiB,IAAXuB,EACE,qBAAKrB,UAAU,gBAAf,SACA,qBAAKA,UAAU,8CAAf,SACI,qBAAKA,UAAU,8CAAf,SACA,sBAAKA,UAAU,+BAAf,UACI,sBAAMA,UAAU,oCAAhB,SACA,cAAC,IAAD,CAAkBA,UAAU,qBAAqB,cAAY,WAE7D,oBAAGA,UAAU,uCAAb,UACCqB,EACD,sBAAMrB,UAAU,iCAMxB,GACN,qBAAKA,UAAU,yEAAf,SACE,sBAAKA,UAAU,4BAAf,UACA,gCACI,oBAAIA,UAAU,yDAAd,4BACA,oBAAGA,UAAU,yCAAb,UACA,mBAAGK,KAAK,IAAIL,UAAU,oDAAtB,oGAGA,cAAC,IAAD,CAAMQ,GAAK,IAAIR,UAAY,cAA3B,mCAGJ,uBAAMA,UAAU,iBAAiB0B,SAAU,SAAAF,GAAC,OA7CjC,SAAAA,GACfA,EAAEG,iBACF,IAAMC,EAAaC,iBAAOpD,EAAOuC,EAAMC,GACvC5B,MAAM,iCAAkC,CACtCC,OAAQ,OACRwC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE,KAAQf,EAAM,WAAcU,MAClDrC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAK,SAAAE,GACN6B,EAAW7B,EAAK4B,YAiCkCK,CAASF,IAAzD,UACI,uBAAOU,KAAK,SAASzD,KAAK,WAAW0D,aAAa,SAClD,sBAAKnC,UAAU,mCAAf,UACA,gCACI,uBAAOoC,QAAQ,OAAOpC,UAAU,UAAhC,kBAGA,uBACAqC,GAAG,OACH5D,KAAK,OACLyD,KAAK,OACLlC,UAAU,6NACVsC,YAAY,OACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,SAG5B,gCACI,uBAAOY,QAAQ,MAAMpC,UAAU,UAA/B,oCAGA,uBACAqC,GAAG,MACH5D,KAAK,MACLyD,KAAK,OACLlC,UAAU,gNACVsC,YAAY,yBACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,SAG5B,gCACI,uBAAOY,QAAQ,MAAMpC,UAAU,UAA/B,2BAGA,uBACAqC,GAAG,MACH5D,KAAK,MACLyD,KAAK,OACLlC,UAAU,gNACVsC,YAAY,gBACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,SAG5B,gCACI,uBAAOY,QAAQ,MAAMpC,UAAU,UAA/B,yBAGA,uBACAqC,GAAG,OACH5D,KAAK,OACLyD,KAAK,OACLlC,UAAU,6NACVsC,YAAY,cACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,YAK5B,qBAAKxB,UAAU,sCAIf,8BACA,wBACIkC,KAAK,SACLlC,UAAU,sOAFd,gCC/BDuC,EA1FA,WACX,MAAsCtD,mBAAS,MAA/C,mBAAOuD,EAAP,KAAoBC,EAApB,KAEA,EAA8BxD,mBAAS,IAAvC,mBAAOoC,EAAP,KAAgBC,EAAhB,KAmBA,OACI,gCACiB,IAAXD,EACE,qBAAKrB,UAAU,gBAAf,SACA,qBAAKA,UAAU,8CAAf,SACI,qBAAKA,UAAU,8CAAf,SACA,sBAAKA,UAAU,+BAAf,UACI,sBAAMA,UAAU,oCAAhB,SACA,cAAC,IAAD,CAAkBA,UAAU,qBAAqB,cAAY,WAE7D,oBAAGA,UAAU,uCAAb,UACCqB,EACD,sBAAMrB,UAAU,iCAMxB,GACJ,qBAAKA,UAAU,yEAAf,SACA,sBAAKA,UAAU,4BAAf,UACA,gCACI,oBAAIA,UAAU,yDAAd,8BACI,oBAAGA,UAAU,yCAAb,UACA,mBAAGK,KAAK,IAAIL,UAAU,oDAAtB,6EAGA,cAAC,IAAD,CAAMQ,GAAK,IAAIR,UAAY,cAA3B,mCAIR,uBAAMA,UAAU,iBAAiB0B,SAAU,SAAAF,GAAC,OA9CnC,SAAAA,GACbkB,QAAQC,IAAIH,GACZhB,EAAEG,iBACFtC,MAAM,iCAAkC,CACpCC,OAAQ,OACRwC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUO,KACtBjD,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GACJ6B,EAAW7B,EAAK4B,YAkCgCK,CAASF,IAAzD,UACI,uBAAOU,KAAK,SAASzD,KAAK,WAAW0D,aAAa,SAClD,qBAAKnC,UAAU,mCAAf,SACA,gCACI,uBAAOoC,QAAQ,OAAOpC,UAAU,UAAhC,0BAGA,uBACAqC,GAAG,OACH5D,KAAK,cACLyD,KAAK,OACLlC,UAAU,2NACVsC,YAAY,eACZf,SAAU,SAAAC,GAAC,OA7DV,SAAAA,GAAC,OAAIiB,EAAe,eAAGjB,EAAEC,OAAOhD,KAAO+C,EAAEC,OAAO3B,QA6DlCyB,CAASC,WAK5B,qBAAKxB,UAAU,sCAIf,8BACA,wBACIkC,KAAK,SACLlC,UAAU,sOAFd,kCC0BD4C,EAzGI,WACf,MAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KACA,EAA4B7D,mBAAS,GAArC,mBAAO8D,EAAP,KAAeC,EAAf,KACA,EAA4B/D,mBAAS,IAArC,mBAAOgE,EAAP,KAAeC,EAAf,KAmBA,OAhBA9D,qBAAU,WACNC,MAAM,6BAA8B,CAChCC,OAAQ,QACTC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GACJiD,QAAQC,IAAIlD,GACZ,IAAI0D,EAAS1D,EAAKoD,WAAWO,QAAQ,KAAM,KAC3CD,EAASnB,KAAKqB,MAAMF,GACpBL,EAAcK,GACdH,EAAUvD,EAAKsD,QACfG,EAAUzD,EAAK6D,eAEpB,IAIC,gCACI,wBAAQtD,UAAU,kBAAlB,SACA,sBAAKA,UAAU,8CAAf,UACI,oBAAIA,UAAU,qCAAd,6BACA,kDAAqB+C,KACrB,4DAA+BE,EAAOM,cACtC,cAAC,IAAD,CAAM/C,GAAK,IAAIR,UAAY,cAA3B,kCAGH,qBAAKA,UAAU,gBAAf,SACG,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,4DAAf,SACA,qBAAKA,UAAU,gEAAf,SACI,wBAAOA,UAAU,sCAAjB,UACA,uBAAOA,UAAU,aAAjB,SACI,+BACA,oBACIa,MAAM,MACNb,UAAU,iFAFd,kBAMA,oBACIa,MAAM,MACNb,UAAU,iFAFd,wBAMA,oBACIa,MAAM,MACNb,UAAU,iFAFd,iCAMA,oBACIa,MAAM,MACNb,UAAU,iFAFd,kBAMA,oBACIa,MAAM,MACNb,UAAU,iFAFd,6BAQJ,uBAAOA,UAAU,oCAAjB,SACK6C,EAAWlC,KAAI,SAAC6C,GAAD,OAChB,+BACI,oBAAIxD,UAAU,8BAAd,SACA,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,OAAf,SACA,qBAAKA,UAAU,oCAAf,SAAoDwD,EAAMC,eAI9D,oBAAIzD,UAAU,8BAAd,SACI,qBAAKA,UAAU,wBAAf,SAAwCwD,EAAME,cAElD,oBAAI1D,UAAU,8BAAd,SACI,qBAAKA,UAAU,wBAAf,SAAwCwD,EAAMG,kBAElD,oBAAI3D,UAAU,8BAAd,SACI,qBAAKA,UAAU,wBAAf,SAAwCwD,EAAMtC,SAElD,oBAAIlB,UAAU,8BAAd,SACI,qBAAKA,UAAU,wBAAf,SAAwCwD,EAAM5B,iBAlB7C4B,EAAMC,4BCvD5BG,EAbH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/E,IACjC,cAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,QAAQC,UAAWhD,IACrC,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,UAAUC,UAAWxB,IACvC,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,cAAcC,UAAWnB,UCHtCoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87e6504b.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\n\nimport {Link} from 'react-router-dom'\n\nimport { AnnotationIcon, GlobeAltIcon, LightningBoltIcon, ScaleIcon } from '@heroicons/react/outline'\n\nconst navigation = [\n  { name: 'Product', href: '#' },\n  { name: 'Features', href: '#' },\n  { name: 'Marketplace', href: '#' },\n  { name: 'Company', href: '#' },\n]\n\nconst features = [\n    {\n      name: 'Vote where you\\'re comfortable',\n      description:\n        'Especially given global health concerns, people are able to vote from the comfort and safety of their homes.',\n      icon: GlobeAltIcon,\n    },\n    {\n      name: 'Equal Access',\n      description:\n        'The ability to vote online gives everyone the same easy access to voice their opinions.',\n      icon: ScaleIcon,\n    },\n    {\n      name: 'Votes are secure',\n      description:\n        'We use a blockchain to secure your votes while keeping your personal credentials completely secure through hashing. If someone tries to change your vote, the blockchain will know.',\n      icon: LightningBoltIcon,\n    },\n    {\n      name: 'Increased election transparency',\n      description:\n        'Anyone can check the state of the public ledger. You can also provide your vote block number and verify that you\\'re vote hasn\\'t been tampered with.',\n      icon: AnnotationIcon,\n    },\n  ]\n\nconst Home = () => {\n    const [votes, setVotes] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:8000/api/count_votes`, {\n            method: \"GET\"\n        }).then(response => {\n            return response.json()\n        }).then(json => {\n            var votes_arr = []\n            for (const [key, value] of Object.entries(json)) {\n                votes_arr.push({'name': key, 'votes': value})\n              }\n            setVotes(votes_arr)\n        })\n    }, [])\n    return (\n        <div>\n            <div className=\"relative bg-white overflow-hidden\">\n                <div className=\"max-w-7xl mx-auto\">\n                    <div className=\"relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32\">\n                    <svg\n                        className=\"hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 100 100\"\n                        preserveAspectRatio=\"none\"\n                        aria-hidden=\"true\"\n                    >\n                        <polygon points=\"50,0 100,0 50,100 0,100\" />\n                    </svg>\n\n                    <Popover>\n                        <div className=\"relative pt-6 px-4 sm:px-6 lg:px-8\">\n                        <nav className=\"relative flex items-center justify-between sm:h-10 lg:justify-start\" aria-label=\"Global\">\n                            <div className=\"flex items-center flex-grow flex-shrink-0 lg:flex-grow-0\">\n                                <div className=\"flex items-center justify-between w-full md:w-auto\">\n                                    <a className = \"text-indigo-600 text-3xl\" href=\"#\">\n                                    <span className=\"sr-only\">Workflow</span>\n                                    Votr\n                                    </a>\n                                </div>\n                            </div>\n                            <div style = {{marginLeft: \"400px\"}} className=\"hidden md:block md:ml-10 md:pr-4 md:space-x-8\">\n                                <Link to='/blockchain' className=\"font-medium hover:text-indigo-500\">\n                                    View blockchain\n                                </Link>\n                            </div>\n                        </nav>\n                        </div>\n                    </Popover>\n\n                    <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                        <div className=\"sm:text-center lg:text-left\">\n                        <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                            <span className=\"block xl:inline\">Fast, secure, and reliable</span>{' '}\n                            <span className=\"block text-indigo-600 xl:inline\">voting</span>\n                        </h1>\n                        <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                            Votr is an online voting platform based on the blockchain. Online voting turnout not only makes voting more accessible for everyone, but allows for a transparent election where anyone can verify the public ledger and that their vote is cast as intended.\n                        </p>\n                        <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n                            <div className=\"rounded-md shadow\">\n                            <Link\n                                to=\"/vote\"\n                                className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                            >\n                                Vote Now\n                            </Link>\n                            </div>\n                            <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                            <Link\n                                to=\"/verify\"\n                                className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                            >\n                                Verify My Vote\n                            </Link>\n                            </div>\n                        </div>\n                        </div>\n                    </main>\n                    </div>\n                </div>\n                <div className=\"lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2\">\n                    <img\n                    className=\"h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full\"\n                    src=\"https://images.unsplash.com/photo-1587131110607-07f5be87b5ba?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2051&q=80\"\n                    alt=\"\"\n                    />\n                </div>\n            </div>\n            <div className=\"py-12 bg-white\">\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                    <div className=\"lg:text-center\">\n                    <h2 className=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">Why Votr</h2>\n                    <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n                        A better way to vote\n                    </p>\n                    <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n                        The United States has 90% Internet penetration. It's time to digetize our democracy.\n                    </p>\n                    </div>\n\n                    <div className=\"mt-10\">\n                    <dl className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10\">\n                        {features.map((feature) => (\n                        <div key={feature.name} className=\"relative\">\n                            <dt>\n                            <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\">\n                                <feature.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                            </div>\n                            <p className=\"ml-16 text-lg leading-6 font-medium text-gray-900\">{feature.name}</p>\n                            </dt>\n                            <dd className=\"mt-2 ml-16 text-base text-gray-500\">{feature.description}</dd>\n                        </div>\n                        ))}\n                    </dl>\n                    </div>\n                </div>\n            </div>\n            <div>\n            <div>\n            <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-indigo-600\">Live Vote Counts</h1>\n            </div>\n            </header>\n             <div className=\"flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Name\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Number of votes\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {votes.map((person) => (\n                            <tr key={person.name}>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <div className=\"flex items-center\">\n                                    <div className=\"ml-4\">\n                                    <div className=\"text-sm font-medium text-gray-900\">{person.name}</div>\n                                    </div>\n                                </div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                    <div className=\"text-sm text-gray-900\">{person.votes}</div>\n                                </td>\n\n                            </tr>\n                            ))}\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import { useState } from \"react\"\nimport { sha256 } from 'js-sha256'\nimport { SpeakerphoneIcon, XIcon } from '@heroicons/react/outline'\n\nimport {Link} from 'react-router-dom'\n\nconst Vote = () => {\n    const [credentials, setCredentials] = useState({\n        name: '',\n        ssn: '',\n        dob: '',\n        vote: ''\n      })\n    \n      const [message, setMessage] = useState('')\n    \n      const { name, ssn, dob, vote } = credentials;\n      \n      const onChange = e => setCredentials({ ...credentials, [e.target.name]: e.target.value });\n    \n      const onSubmit = e => {\n        e.preventDefault()\n        const voter_hash = sha256(name + ssn + dob)\n        fetch(`http://localhost:8000/api/add/`, {\n          method: \"POST\",\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ 'vote': vote, 'voter_hash': voter_hash })\n        }).then(response => {\n          return response.json()\n        }).then(json => {\n          setMessage(json.message)\n        })\n      }\n      return (\n        <div>\n            { message != \"\" ? (\n                <div className=\"bg-indigo-600\">\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"flex items-center justify-between flex-wrap\">\n                    <div className=\"w-0 flex-1 flex items-center\">\n                        <span className=\"flex p-2 rounded-lg bg-indigo-800\">\n                        <SpeakerphoneIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                        </span>\n                        <p className=\"ml-3 font-medium text-white truncate\">\n                        {message}\n                        <span className=\"hidden md:inline\"></span>\n                        </p>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            ) : \"\"}\n          <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n            <div>\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Cast your vote</h2>\n                <p className=\"mt-2 text-center text-sm text-gray-600\">\n                <p href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                    Once you vote, you will receive your block number that can be used to verify your vote\n                </p>\n                <Link to = '/' className = 'font-medium'>Go to home page</Link>\n                </p>\n            </div>\n            <form className=\"mt-8 space-y-6\" onSubmit={e => onSubmit(e)}>\n                <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                    <label htmlFor=\"name\" className=\"sr-only\">\n                    Name\n                    </label>\n                    <input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Name\"\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dob\" className=\"sr-only\">\n                    Social Security Number\n                    </label>\n                    <input\n                    id=\"ssn\"\n                    name=\"ssn\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Social Security Number\"\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dob\" className=\"sr-only\">\n                    Date of Birth\n                    </label>\n                    <input\n                    id=\"dob\"\n                    name=\"dob\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Date of Birth\"\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dob\" className=\"sr-only\">\n                    Vote choice\n                    </label>\n                    <input\n                    id=\"vote\"\n                    name=\"vote\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Vote choice\"\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n\n                </div>\n\n                <div>\n                <button\n                    type=\"submit\"\n                    className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                    Vote\n                </button>\n                </div>\n            </form>\n            </div>\n        </div>\n        </div>\n      )\n}\n\nexport default Vote","import { useState } from \"react\"\nimport { sha256 } from 'js-sha256'\nimport { SpeakerphoneIcon, XIcon } from '@heroicons/react/outline'\n\nimport {Link} from 'react-router-dom'\n\nconst Verify = () => {\n    const [blockNumber, setBlockNumber] = useState(null)\n    \n    const [message, setMessage] = useState('')\n        \n    const onChange = e => setBlockNumber({ [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        console.log(blockNumber)\n        e.preventDefault()\n        fetch(`http://localhost:8000/api/get/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(blockNumber)\n        }).then(response => {\n            return response.json()\n        }).then(json => {\n            setMessage(json.message)\n        })\n    }\n    return (\n        <div>\n            { message != \"\" ? (\n                <div className=\"bg-indigo-600\">\n                <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                    <div className=\"flex items-center justify-between flex-wrap\">\n                    <div className=\"w-0 flex-1 flex items-center\">\n                        <span className=\"flex p-2 rounded-lg bg-indigo-800\">\n                        <SpeakerphoneIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                        </span>\n                        <p className=\"ml-3 font-medium text-white truncate\">\n                        {message}\n                        <span className=\"hidden md:inline\"></span>\n                        </p>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            ) : \"\"}\n            <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n            <div>\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Verify your vote</h2>\n                    <p className=\"mt-2 text-center text-sm text-gray-600\">\n                    <p href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                        Put in your block number and you can check your vote is intact.\n                    </p>\n                    <Link to = '/' className = 'font-medium'>Go to home page</Link>\n                </p>\n\n            </div>\n            <form className=\"mt-8 space-y-6\" onSubmit={e => onSubmit(e)}>\n                <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                    <label htmlFor=\"name\" className=\"sr-only\">\n                    Block Number\n                    </label>\n                    <input\n                    id=\"name\"\n                    name=\"blockNumber\"\n                    type=\"text\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Block Number\"\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n\n                </div>\n\n                <div>\n                <button\n                    type=\"submit\"\n                    className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                    Verify\n                </button>\n                </div>\n            </form>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Verify","import { useState, useEffect } from \"react\"\nimport {Link} from 'react-router-dom'\n\nconst Blockchain = () => {\n    const [blockchain, setBlockchain] = useState([])\n    const [length, setLength] = useState(0)\n    const [status, setStatus] = useState(\"\")\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8000/api/`, {\n            method: \"GET\"\n        }).then(response => {\n            return response.json()\n        }).then(json => {\n            console.log(json)\n            var blocks = json.blockchain.replace(/'/g, '\"');\n            blocks = JSON.parse(blocks);\n            setBlockchain(blocks)\n            setLength(json.length)\n            setStatus(json.is_valid)\n        })\n    }, [])\n\n\n    return (\n        <div>\n            <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-indigo-600\">Blockchain Data</h1>\n                <p>Length of chain: {length}</p>\n                <p>Block chain is untampered: {status.toString()}</p>\n                <Link to = '/' className = 'font-medium'>Go to home page</Link>\n            </div>\n            </header>\n             <div className=\"flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Name\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Block Hash\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Previous Block Hash\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Vote\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                            >\n                                Voter Hash\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {blockchain.map((block) => (\n                            <tr key={block.number}>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <div className=\"flex items-center\">\n                                    <div className=\"ml-4\">\n                                    <div className=\"text-sm font-medium text-gray-900\">{block.number}</div>\n                                    </div>\n                                </div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                    <div className=\"text-sm text-gray-900\">{block.hash_code}</div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                    <div className=\"text-sm text-gray-900\">{block.previous_hash}</div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                    <div className=\"text-sm text-gray-900\">{block.vote}</div>\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                    <div className=\"text-sm text-gray-900\">{block.voter_hash}</div>\n                                </td>\n                            </tr>\n                            ))}\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Blockchain","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nimport Home from './Home'\nimport Vote from './Vote'\nimport Verify from './Verify'\nimport Blockchain from './Blockchain';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/vote' component={Vote} />\n          <Route exact path='/verify' component={Verify} />\n          <Route exact path='/blockchain' component={Blockchain} />\n      </Switch>\n  </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}